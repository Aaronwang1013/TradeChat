version: "3"

services:
  zookeeper:
    image: zookeeper:latest
    container_name: container_zookeeper
    ports:
      - "2181:2181"
      - "2888:2888"
      - "3888:3888"
    networks:
      - custom_network

  kafka:
    image: debezium/kafka:latest
    container_name: container_broker
    ports:
      - "9092:9092"
    environment:
      - ZOOKEEPER_CONNECT=zookeeper:2181
    depends_on:
      - zookeeper
    networks:
      - custom_network
  
  producer:
    build: ./FinnhubProducer 
    container_name: python_kafka_producer
    ports:
      - 8001:80
    command: sh -c 'pip install kafka-python && tail -f /dev/null'
    volumes:
      - ./FinnhubProducer:/app
    networks:
      - custom_network

  spark:
    build: ./FinnhubConsumer
    container_name: spark
    environment:
      - SPARK_MASTER_URL=spark://spark:7077
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
      - SPARK_MODE=master
    ports:
      - '8081:8080'
    volumes:
      - ./FinnhubConsumer:/app
    networks:
      - custom_network
    command: sh -c 'pip install kafka-python && tail -f /dev/null'
    depends_on:
      - kafka

  kafdrop:
    container_name: kafdrop
    environment:
      KAFKA_BROKERCONNECT: kafka:9092
    image: obsidiandynamics/kafdrop
    ports: 
     - 9000:9000
    networks:
      - custom_network


  grafana:
      build: ./grafana
      environment:
        GF_SECURITY_ADMIN_PASSWORD: admin
      ports:
        - "3000:3000"
      networks:
        - custom_network

networks:
  custom_network:
    driver: bridge